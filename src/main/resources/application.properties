spring.application.name=spring-gen-ai
# OpenAI
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o-mini
# Observabilité
## Attention, peut exposer des données sensibles
spring.ai.chat.client.observation.include-input=true
spring.ai.chat.observations.include-prompt=true
spring.ai.chat.observations.include-completion=true
## Fin exposition données sensibles
spring.ai.vector.store.observations.include-query-response=true
spring.ai.chat.observations.include-error-logging=true
spring.ai.chat.client.stream=true
## metrics
management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=${spring.application.name}
## logging
# logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}]
## tracing
management.tracing.sampling.probability=1.0
# Enable virtual threads
spring.threads.virtual.enabled=true
#Enable logging for chats
#logging.level.org.springframework.ai.chat.client.advisor=DEBUG
#Hibernate
spring.jpa.hibernate.ddl-auto=update




